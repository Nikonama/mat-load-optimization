name: MATLAB Load Optimization CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Test MATLAB Functions
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup MATLAB
      uses: matlab-actions/setup-matlab@v2
      with:
        release: R2023b
        
    - name: Add source to MATLAB path
      uses: matlab-actions/run-command@v2
      with:
        command: addpath('src');
        
    - name: Run function tests
      uses: matlab-actions/run-command@v2
      with:
        command: |
          cd tests;
          test_functions();
    
    - name: Syntax check all MATLAB files
      uses: matlab-actions/run-command@v2
      with:
        command: |
          files = [dir('src/*.m'); dir('tests/*.m')];
          for i = 1:length(files)
              file_path = fullfile(files(i).folder, files(i).name);
              fprintf('Checking %s...\n', file_path);
              try
                  checkcode(file_path, '-cyc');
                  fprintf('✓ %s OK\n', files(i).name);
              catch ME
                  fprintf('✗ Error in %s\n', files(i).name);
                  rethrow(ME);
              end
          end

  simulation:
    name: Run Optimization Simulation
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup MATLAB
      uses: matlab-actions/setup-matlab@v2
      with:
        release: R2023b
        
    - name: Generate test data
      uses: matlab-actions/run-command@v2
      with:
        command: |
          % Generate synthetic test data
          rng(42); % For reproducible results
          P = 800 + 400*sin(2*pi*(1:24)/24) + 100*randn(24,1);
          L_res = 200 + 150*sin(2*pi*(1:24)/24 + pi/4) + 30*randn(24,1);
          L_com = 300 + 200*sin(2*pi*(1:24)/24 + pi/2) + 40*randn(24,1);
          L_ind = 500 + 300*sin(2*pi*(1:24)/24 - pi/4) + 50*randn(24,1);
          
          % Ensure positive values
          P = max(P, 100);
          L_res = max(L_res, 50);
          L_com = max(L_com, 50);
          L_ind = max(L_ind, 100);
          
          save('data/baseline_data.mat', 'P', 'L_res', 'L_com', 'L_ind');
          fprintf('Test data generated successfully\n');
          
    - name: Run optimization
      uses: matlab-actions/run-command@v2
      with:
        command: |
          addpath('src');
          cd src;
          baseline;
